// <auto-generated />
using System;
using Exercice_Form.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Exercice_Form.Migrations
{
    [DbContext(typeof(ExeDbContext))]
    [Migration("20210212184341_MigrationInitiale")]
    partial class MigrationInitiale
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Exercice4_Formulaire.Models.Departement", b =>
                {
                    b.Property<int>("DepartementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartementId");

                    b.ToTable("Departements");
                });

            modelBuilder.Entity("Exercice4_Formulaire.Models.Employe", b =>
                {
                    b.Property<int>("EmployeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEmbauche")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<bool>("EstEnEmploi")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaysId")
                        .HasColumnType("int");

                    b.Property<int>("Salaire")
                        .HasColumnType("int");

                    b.HasKey("EmployeId");

                    b.HasIndex("DepartementId");

                    b.HasIndex("PaysId");

                    b.ToTable("Employes");
                });

            modelBuilder.Entity("Exercice4_Formulaire.Models.Pays", b =>
                {
                    b.Property<int>("PaysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Superficie")
                        .HasColumnType("int");

                    b.HasKey("PaysId");

                    b.ToTable("Pays");
                });

            modelBuilder.Entity("Exercice4_Formulaire.Models.Employe", b =>
                {
                    b.HasOne("Exercice4_Formulaire.Models.Departement", "Departement")
                        .WithMany("Employes")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exercice4_Formulaire.Models.Pays", "PaysOrigine")
                        .WithMany("Employes")
                        .HasForeignKey("PaysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");

                    b.Navigation("PaysOrigine");
                });

            modelBuilder.Entity("Exercice4_Formulaire.Models.Departement", b =>
                {
                    b.Navigation("Employes");
                });

            modelBuilder.Entity("Exercice4_Formulaire.Models.Pays", b =>
                {
                    b.Navigation("Employes");
                });
#pragma warning restore 612, 618
        }
    }
}
